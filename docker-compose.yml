version: "3.8"

services:
    mongodb:
        image: mongo:latest
        container_name: mongodb
        networks:
            - app-network
        ports:
            - "27017:27017"
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=rootpassword
        volumes:
            - ./mongo-data:/data/db

    gateway-service:
        build:
            context: ./gateway-service
        container_name: gateway-service
        networks:
            - app-network
        ports:
            - "8080:8080" # Only gateway-service is exposed externally
        environment:
            - GATEWAY_SERVICE_PORT=8080
            - JWT_SECRET=aHR0cHM6Ly93d3cueW91YmlsdW1hbWVyaWNhLmNvbS9sb2dpbi8= # Base64-encoded secret
        restart: always

    auth-service:
        build:
            context: ./auth-service
        container_name: auth-service
        networks:
            - app-network
        depends_on:
            - mongodb
            - gateway-service
        environment:
            - MONGO_URI=mongodb://root:rootpassword@mongodb:27017/healthcare?authSource=admin
            - JWT_SECRET=aHR0cHM6Ly93d3cueW91YmlsdW1hbWVyaWNhLmNvbS9sb2dpbi8= # Base64-encoded secret
        restart: always

    doctor-service:
        build:
            context: ./doctor-service
        container_name: doctor-service
        networks:
            - app-network
        depends_on:
            - mongodb
            - gateway-service
        environment:
            - MONGO_URI=mongodb://root:rootpassword@mongodb:27017/healthcare?authSource=admin
        restart: always

    patient-service:
        build:
            context: ./patient-service
        container_name: patient-service
        networks:
            - app-network
        depends_on:
            - mongodb
            - gateway-service
        environment:
            - MONGO_URI=mongodb://root:rootpassword@mongodb:27017/healthcare?authSource=admin
        restart: always

    appointment-service:
        build:
            context: ./appointment-service
        container_name: appointment-service
        networks:
            - app-network
        depends_on:
            - mongodb
            - gateway-service
            - doctor-service
            - patient-service
            - kafka
        environment:
            - MONGO_URI=mongodb://root:rootpassword@mongodb:27017/healthcare?authSource=admin
            - KAFKA_BOOTSTRAP_SERVER=kafka:9092
            - KAFKA_TOPIC=appointments
        restart: always

    notification-service:
        build:
            context: ./notification-service
        container_name: notification-service
        networks:
            - app-network
        depends_on:
            - mongodb
            - gateway-service
            - doctor-service
            - patient-service
            - appointment-service
            - kafka
        environment:
            - KAFKA_BOOTSTRAP_SERVER=kafka:9092
            - KAFKA_GROUP_ID=appointment-notifications-group
            - KAFKA_TOPIC=appointments
            - MAIL_SERVER_HOST=smtp.gmail.com
            - MAIL_SERVER_PORT=587
            - MAIL_SERVER_USERNAME=noreplyhungrycoders@gmail.com
            - MAIL_SERVER_PASSWORD=password
        restart: always

    kafka:
        image: bitnami/kafka:3.6
        container_name: kafka
        ports:
            - 9092:9092
        environment:
            - KAFKA_ENABLE_KRAFT=yes
            - KAFKA_CFG_PROCESS_ROLES=broker,controller
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
            - KAFKA_BROKER_ID=1
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_CFG_NODE_ID=1
            - KAFKA_KRAFT_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
        networks:
            - app-network

    ui-service:
        build:
            context: ./ui-component # Path to your ReactJS project
        container_name: ui-service
        networks:
            - app-network
        depends_on:
            - mongodb
            - gateway-service
        ports:
            - "9090:80" # Expose the React app on port 9090
        restart: always

    admin-service:
        build:
            context: ./admin-service
        container_name: admin-service
        networks:
            - app-network
        depends_on:
            - appointment-service
            - auth-service
            - doctor-service
            - gateway-service
            - notification-service
            - patient-service
        ports:
            - "9093:8080"
        restart: always

networks:
    app-network:

volumes:
    mongo-data:
        driver: local
